// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using college_management.Dados.Contexto;

#nullable disable

namespace college_management.Migrations
{
    [DbContext(typeof(BancoDeDados))]
    partial class BancoDeDadosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("college_management.Dados.Modelos.Avaliacao", b =>
                {
                    b.Property<uint>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("P1")
                        .HasColumnType("REAL");

                    b.Property<float?>("P2")
                        .HasColumnType("REAL");

                    b.Property<float?>("P3")
                        .HasColumnType("REAL");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasKey("AlunoId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.CorpoDocente", b =>
                {
                    b.Property<uint>("DocenteId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DocenteId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("CorpoDocente");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.GradeCurricular", b =>
                {
                    b.Property<uint>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CursoId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("GradeCurricular");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Matricula", b =>
                {
                    b.Property<uint>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Modalidade")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Periodo")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "CursoId");

                    b.HasIndex("CursoId");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Modelo", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("GestorId")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("GestorId1")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GestorId");

                    b.HasIndex("GestorId1");

                    b.ToTable("Modelo");

                    b.HasDiscriminator<string>("TipoUsuario").HasValue("Modelo");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Turma", b =>
                {
                    b.Property<uint>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("DocenteId")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("DocenteId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Turno")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunoId", "MateriaId");

                    b.HasIndex("DocenteId");

                    b.HasIndex("DocenteId1");

                    b.HasIndex("MateriaId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Curso", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Modelo");

                    b.HasDiscriminator().HasValue("Curso");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Materia", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Modelo");

                    b.Property<uint>("CargaHoraria")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Materia");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Usuario", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Modelo");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Usuario");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Aluno", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Usuario");

                    b.HasDiscriminator().HasValue("Aluno");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Docente", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Usuario");

                    b.HasDiscriminator().HasValue("Docente");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Gestor", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Usuario");

                    b.Property<int>("Cargo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.HasDiscriminator().HasValue("Gestor");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Avaliacao", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("college_management.Dados.Modelos.CorpoDocente", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Docente", null)
                        .WithMany()
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("college_management.Dados.Modelos.GradeCurricular", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Matricula", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Modelo", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Gestor", "Gestor")
                        .WithMany()
                        .HasForeignKey("GestorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Gestor", null)
                        .WithMany("Modelos")
                        .HasForeignKey("GestorId1");

                    b.Navigation("Gestor");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Turma", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Docente", null)
                        .WithMany("Turmas")
                        .HasForeignKey("DocenteId1");

                    b.HasOne("college_management.Dados.Modelos.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Docente", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Gestor", b =>
                {
                    b.Navigation("Modelos");
                });
#pragma warning restore 612, 618
        }
    }
}
