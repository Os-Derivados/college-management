// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using college_management.Dados.Contexto;

#nullable disable

namespace college_management.Migrations
{
    [DbContext(typeof(BancoDeDados))]
    [Migration("20250601021331_Fix-DeleteBehavior")]
    partial class FixDeleteBehavior
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.14");

            modelBuilder.Entity("AlunoCurso", b =>
                {
                    b.Property<uint>("AlunosId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CursosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunosId", "CursosId");

                    b.HasIndex("CursosId");

                    b.ToTable("AlunoCurso");
                });

            modelBuilder.Entity("AlunoMateria", b =>
                {
                    b.Property<uint>("AlunosId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunosId", "MateriasId");

                    b.HasIndex("MateriasId");

                    b.ToTable("AlunoMateria");
                });

            modelBuilder.Entity("AlunoTurma", b =>
                {
                    b.Property<uint>("AlunosId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("TurmasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AlunosId", "TurmasId");

                    b.HasIndex("TurmasId");

                    b.ToTable("AlunoTurma");
                });

            modelBuilder.Entity("CursoMateria", b =>
                {
                    b.Property<uint>("CursosId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CursosId", "MateriasId");

                    b.HasIndex("MateriasId");

                    b.ToTable("CursoMateria");
                });

            modelBuilder.Entity("DocenteMateria", b =>
                {
                    b.Property<uint>("DocentesId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriasId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DocentesId", "MateriasId");

                    b.HasIndex("MateriasId");

                    b.ToTable("DocenteMateria");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Avaliacao", b =>
                {
                    b.Property<uint>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.Property<float?>("P1")
                        .HasMaxLength(10)
                        .HasColumnType("REAL");

                    b.Property<float?>("P2")
                        .HasMaxLength(10)
                        .HasColumnType("REAL");

                    b.Property<float?>("P3")
                        .HasMaxLength(10)
                        .HasColumnType("REAL");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("MateriaId", "AlunoId");

                    b.HasIndex("AlunoId");

                    b.ToTable("Avaliacoes", (string)null);
                });

            modelBuilder.Entity("college_management.Dados.Modelos.CorpoDocente", b =>
                {
                    b.Property<uint>("DocenteId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.HasKey("DocenteId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("CorposDocentes", (string)null);
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Curso", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("college_management.Dados.Modelos.GradeCurricular", b =>
                {
                    b.Property<uint>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.HasKey("CursoId", "MateriaId");

                    b.HasIndex("MateriaId");

                    b.ToTable("GradesCurriculares", (string)null);
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Materia", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Materias", (string)null);
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Matricula", b =>
                {
                    b.Property<uint?>("CursoId")
                        .HasColumnType("INTEGER");

                    b.Property<uint?>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.Property<int>("Modalidade")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Periodo")
                        .HasColumnType("INTEGER");

                    b.HasKey("CursoId", "AlunoId");

                    b.HasIndex("AlunoId");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Turma", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<uint?>("DocenteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.Property<uint?>("MateriaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<int>("Turno")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.HasIndex("MateriaId");

                    b.ToTable("Turmas", (string)null);
                });

            modelBuilder.Entity("college_management.Dados.Modelos.TurmaAluno", b =>
                {
                    b.Property<uint>("TurmaId")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("AlunoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.HasKey("TurmaId", "AlunoId");

                    b.HasIndex("AlunoId");

                    b.ToTable("TurmaAlunos", (string)null);
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Usuario", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("CriadoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EditadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("EditadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Sal")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Tipo").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Aluno", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Usuario");

                    b.HasDiscriminator().HasValue("Aluno");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Docente", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Usuario");

                    b.HasDiscriminator().HasValue("Docente");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Gestor", b =>
                {
                    b.HasBaseType("college_management.Dados.Modelos.Usuario");

                    b.Property<int>("Cargo")
                        .HasColumnType("INTEGER");

                    b.HasDiscriminator().HasValue("Gestor");
                });

            modelBuilder.Entity("AlunoCurso", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlunoMateria", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlunoTurma", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Turma", null)
                        .WithMany()
                        .HasForeignKey("TurmasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CursoMateria", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Curso", null)
                        .WithMany()
                        .HasForeignKey("CursosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocenteMateria", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Docente", null)
                        .WithMany()
                        .HasForeignKey("DocentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", null)
                        .WithMany()
                        .HasForeignKey("MateriasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Avaliacao", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", "Aluno")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", "Materia")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.CorpoDocente", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Docente", "Docente")
                        .WithMany("CorpoDocente")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", "Materia")
                        .WithMany("CorpoDocente")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Docente");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.GradeCurricular", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Curso", "Curso")
                        .WithMany("GradesCurriculares")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Materia", "Materia")
                        .WithMany("GradesCurriculares")
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Matricula", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", "Aluno")
                        .WithMany("Matriculas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Curso", "Curso")
                        .WithMany("Matriculas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Turma", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Docente", "Docente")
                        .WithMany("Turmas")
                        .HasForeignKey("DocenteId");

                    b.HasOne("college_management.Dados.Modelos.Materia", "Materia")
                        .WithMany("Turmas")
                        .HasForeignKey("MateriaId");

                    b.Navigation("Docente");

                    b.Navigation("Materia");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.TurmaAluno", b =>
                {
                    b.HasOne("college_management.Dados.Modelos.Aluno", "Aluno")
                        .WithMany("TurmaAlunos")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("college_management.Dados.Modelos.Turma", "Turma")
                        .WithMany("TurmaAlunos")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Curso", b =>
                {
                    b.Navigation("GradesCurriculares");

                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Materia", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("CorpoDocente");

                    b.Navigation("GradesCurriculares");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Turma", b =>
                {
                    b.Navigation("TurmaAlunos");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Aluno", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("Matriculas");

                    b.Navigation("TurmaAlunos");
                });

            modelBuilder.Entity("college_management.Dados.Modelos.Docente", b =>
                {
                    b.Navigation("CorpoDocente");

                    b.Navigation("Turmas");
                });
#pragma warning restore 612, 618
        }
    }
}
